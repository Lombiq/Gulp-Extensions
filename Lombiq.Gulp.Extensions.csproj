<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netcoreapp3.1</TargetFrameworks>
    <DefaultItemExcludes>$(DefaultItemExcludes);.git*;node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="node_modules\**" />
    <FilesToMove Include="$(ProjectDir)\node_modules\**"/>
  </ItemGroup>

  <PropertyGroup>
    <InitCommonNodeModulesStampFile>$(SolutionDir)\node_modules\.install-stamp</InitCommonNodeModulesStampFile>
  </PropertyGroup>

  <!--
    PreBuildEvent executes when there's only one target framework defined or when built for a specific target framework.
    DispatchToInnerBuilds is executed once before the project is built for each target framework, but only when there
    are more than one.
    Binding InitCommonNodeModules to run before both of those ensures that the NPM-related commands will run towards the
    beginning of the build only once, so there are no concurrent processes locking each other's files.
  -->
  <Target
  Name="InitCommonNodeModules"
  BeforeTargets="PreBuildEvent;DispatchToInnerBuilds"
  Inputs="package.json"
  Outputs="$(InitCommonNodeModulesStampFile)">
    <Exec Command="npm install" />
    <Move SourceFiles="@(FilesToMove)" DestinationFolder="$(SolutionDir)\node_modules\%(RecursiveDir)" />
    <Touch Files="$(InitCommonNodeModulesStampFile)" AlwaysCreate="true" />
  </Target>

</Project>
